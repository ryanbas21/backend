name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        plan:
        - { build: stack, resolver: "--resolver lts-15"  }   # ghc-8.8.2

    runs-on: ${{ matrix.os }}

    steps:

    - name: Cache ~/.stack
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack
        #key: ${{ runner.os }}-${{ matrix.resolver }}-stack

    - name: Cache ~/.local/bin
      uses: actions/cache@v1
      with:
        path: ~/.local/bin
        key: ${{ runner.os }}-local-bin

    - name: Cache .stack-work
      uses: actions/cache@v1
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work

    - name: Cache hledger-lib/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger-lib/.stack-work
        key: ${{ runner.os }}-hledger-lib-stack-work

    - name: Cache hledger/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger/.stack-work
        key: ${{ runner.os }}-hledger-stack-work

    - name: Cache hledger-ui/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger-ui/.stack-work
        key: ${{ runner.os }}-hledger-ui-stack-work

    - name: Cache hledger-web/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger-web/.stack-work
        key: ${{ runner.os }}-hledger-web-stack-work

    - name: Check out
      uses: actions/checkout@v2

    - name: Install stack (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      # curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C $INSTALLDIR '*/stack'
      # mkdir -p ~/.local/bin
      # export PATH=~/.local/bin:$PATH
      # if [[ ! -x ~/.local/bin/stack ]]; then curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack; fi
      run: |
        stack --version
    # - if [[ ! -x ~/.local/bin/shelltest ]]; then stack install shelltestrunner-1.9; fi
    # - shelltest --version

    - name: Install stack (mac)
      if: matrix.os == 'macos-latest'
      # curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C $INSTALLDIR
      run: |
        brew install haskell-stack
        stack --version
    - name: Install stack (windows)
      if: matrix.os == 'windows-latest'
      run: |
        curl -skL -o stack.zip http://www.stackage.org/stack/windows-x86_64
        7z x stack.zip -oC:\Windows stack.exe
        stack --version
    - name: Install GHC
      run: |
        stack setup $ARGS
    - name: Install haskell deps
      run: |
        stack --install-ghc $ARGS test --bench --only-dependencies
      #  stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      env:
        ARGS: ${{ matrix.plan.resolver }}
        # BUILD: ${{ matrix.plan.build }}

    - name: Build hledger
      run: |
        stack $ARGS install --ghc-options=-Werror --test --bench --no-run-benchmarks --haddock --no-haddock-deps
      #  stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      env:
        ARGS: ${{ matrix.plan.resolver }}
        # BUILD: ${{ matrix.plan.build }}

    # run hledger-lib/hledger functional tests, skipping the ones for addons
    #- COLUMNS=80 stack exec -- shelltest --execdir -j16 tests -x /bin -x /addons

    # - name: Zip exes (windows)
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     #cd `stack path --local-bin`
    #     7z a hledger.zip %HOME%/.local/bin/hledger %HOME%/.local/bin/hledger-web

    # - name: Upload zip file (windows)
    #   if: matrix.os == 'windows-latest'
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: hledger.zip
    #     path: hledger.zip

    - name: Haskell Linter
      # You may pin to the exact commit or the version.
      # uses: domdere/haskell-lint-action@f865aa0bfb6db9632e0f905dee4b0716a76a5494
      uses: domdere/haskell-lint-action@v1.0.2
    - name: Build generator
      run: cd generator && stack build

    - name: Package generator
      shell: bash
      run: |
        mkdir package
        cd generator
        dir=$(stack path --dist-dir)/build/generator
        [[ -e "$dir/generator" ]] && cp "$dir/generator" ../package/myRetroGenerator
        [[ -e "$dir/generator.exe" ]] && cp "$dir/generator.exe" ../package/myRetroGenerator.exe
        cd ..
        cp -r static template package/
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: generator-${{ runner.os }}
        path: package
